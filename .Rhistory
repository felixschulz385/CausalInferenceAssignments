# --------------------------------------------------------------
# Setup
# --------------------------------------------------------------
packages.vector <- c("dplyr", "stargazer", "sandwich", "lmtest", "AER", "broom", "broom.mixed", "jtools", "texreg", "kableExtra", "rstudioapi")
# Load necessary libraries
lapply(packages.vector, require, character.only = TRUE)
# Load the data
rm(list = ls())
rstudioapi::getActiveDocumentContext()$path %>% dirname() %>% dirname() %>% setwd()
# rstudioapi::getActiveDocumentContext()$path %>% dirname() %>% dirname() %>% setwd()
data = read.csv("code/data_did_panel_swiss.csv")
data
View(data)
unique(data$educ)
table(data$educ)
table(data$lastj_occpt)
table(data$lastj_fct)
treat_one = data %>%
filter(Treat >= 1)
treat_one = data %>%
filter(treat >= 1)
treat_one
View(treat_one)
# ----------
# Question 2
# ----------
# Generate the two outcome variables of interest and provide descriptive statistics for all four
# relevant groups (treated pre/post, controls pre/post). Discuss the results. [4 points]
# ----------
data$unempl_r
# ----------
# Question 2
# ----------
# Generate the two outcome variables of interest and provide descriptive statistics for all four
# relevant groups (treated pre/post, controls pre/post). Discuss the results. [4 points]
# ----------
data$unempl_duration <- as.numeric(data$Date_end - data$Date_start)
data$Date_end
# ----------
# Question 2
# ----------
# Generate the two outcome variables of interest and provide descriptive statistics for all four
# relevant groups (treated pre/post, controls pre/post). Discuss the results. [4 points]
# ----------
data$unempl_duration <- as.numeric(data$date_end - data$date_start)
data$date_end
# ----------
# Question 2
# ----------
# Generate the two outcome variables of interest and provide descriptive statistics for all four
# relevant groups (treated pre/post, controls pre/post). Discuss the results. [4 points]
# ----------
data$unempl_duration <- as.numeric(as.Date(data$date_end) - as.Date(data$date_start))
# ----------
# Question 2
# ----------
# Generate the two outcome variables of interest and provide descriptive statistics for all four
# relevant groups (treated pre/post, controls pre/post). Discuss the results. [4 points]
# ----------
data$unempl_duration <- as.numeric(as.Date(data$date_end, format = "%d%b%Y") - as.Date(data$date_start, format = "%d%b%Y"))
data$unempl_duration
View(data)
# Lab Final Assignment – Causal Inference for Policy Evaluation
# Spring Semester 2025
# Due: 15.07.2025, 23:59
# Authors: Marco Gortan, Felix Schulz, Benjamin Weggelaar
Sys.setenv(lang = "en_US")
# ----------
# Question 2
# ----------
# Generate the two outcome variables of interest and provide descriptive statistics for all four
# relevant groups (treated pre/post, controls pre/post). Discuss the results. [4 points]
# ----------
data$unempl_duration <- as.numeric(as.Date(data$date_end, format = "%d%b%Y") - as.Date(data$date_start, format = "%d%b%Y"))
data$unempl_duration
View(data)
# --------------------------------------------------------------
# Setup
# --------------------------------------------------------------
Sys.setlocale("LC_TIME", "C")
# ----------
# Question 2
# ----------
# Generate the two outcome variables of interest and provide descriptive statistics for all four
# relevant groups (treated pre/post, controls pre/post). Discuss the results. [4 points]
# ----------
data$unempl_duration <- as.numeric(as.Date(data$date_end, format = "%d%b%Y") - as.Date(data$date_start, format = "%d%b%Y"))
data$unempl_duration
path.expand("~")
file.exists(file.path(path.expand("~"), ".Rprofile"))
file.edit("~/.Rprofile")
# ----------
# Question 2
# ----------
# Generate the two outcome variables of interest and provide descriptive statistics for all four
# relevant groups (treated pre/post, controls pre/post). Discuss the results. [4 points]
# ----------
data$unempl_duration <- as.numeric(as.Date(data$date_end, format = "%d%b%Y") - as.Date(data$date_start, format = "%d%b%Y"))
data
# ----------
# Question 2
# ----------
# Generate the two outcome variables of interest and provide descriptive statistics for all four
# relevant groups (treated pre/post, controls pre/post). Discuss the results. [4 points]
# ----------
# Convert date_start and date_end to Date format
data$date_start <- as.Date(data$date_start, format = "%d%b%Y")
data$date_end <- as.Date(data$date_end, format = "%d%b%Y")
# treatment groups
data$treat_group <- ifelse(data$treat == 0 & year(data$date_start >= 2013), "control",
ifelse(year(data$date_start >= 2013), "treatment", NA))
packages.vector <- c("dplyr", "stargazer", "sandwich", "lmtest", "AER", "broom", "broom.mixed",
"jtools", "texreg", "kableExtra", "rstudioapi", "lubridate")
# Load necessary libraries
lapply(packages.vector, require, character.only = TRUE)
# unemployment duration
data$unempl_duration <- as.numeric(date_end - date_start, format = "%d%b%Y")
# ----------
# Question 2
# ----------
# Generate the two outcome variables of interest and provide descriptive statistics for all four
# relevant groups (treated pre/post, controls pre/post). Discuss the results. [4 points]
# ----------
# Convert date_start and date_end to Date format
data$date_start <- as.Date(data$date_start, format = "%d%b%Y")
data$date_end <- as.Date(data$date_end, format = "%d%b%Y")
# treatment groups
data$treat_group <- ifelse(data$treat == 0 & year(data$date_start >= 2013), "control",
ifelse(year(data$date_start >= 2013), "treatment", NA))
# treatment groups
data$treat_group <- ifelse(data$treat == 0 & year(data$date_start) >= 2013, "control",
ifelse(year(data$date_start) >= 2013, "treatment", NA))
data
View(data)
# treatment groups
data$treat_group <- ifelse(data$treat == 0 & year(data$date_start) >= 2013, 0,
ifelse(year(data$date_start) >= 2013, 1, NA))
# unemployment duration
data$unempl_duration <- as.numeric(data$date_end - data$date_start, format = "%d%b%Y")
data
# unemployment duration
data$unempl_duration <- as.numeric(data$date_end - data$date_start, format = "%d%b%Y")
# probability of being employed after 12 months --> follow steps done in Assignment 1
data$employed_after_12_months <- ifelse(data$unempl_duration >= 365, 1, 0)
# probability of being employed after 12 months --> follow steps done in Assignment 1
data$employed_after_12_months <- ifelse(data$unempl_duration < 365, 1, 0)
# probability of being employed after 12 months --> follow steps done in Assignment 1
data$employed_after_12_months <- ifelse(data$unempl_duration < 365, 1, 0)
data
# treatment groups
data$treat_group <- ifelse(data$treat > 0, 1, 0))
data$post        <- ifelse(year(data$date_start) > 0, 1, 0)
data$post        <- ifelse(year(data$date_start) >= 2013, 1, 0)
# treatment groups
data$treat_group <- ifelse(data$treat > 0, 1, 0)
data$post        <- ifelse(year(data$date_start) >= 2013, 1, 0)
# Descriptive statistics for the four groups
descriptive_stats <- data %>%
group_by(treat_group, post) %>%
summarise(
mean_duration = mean(unempl_duration, na.rm = TRUE),
sd_duration = sd(unempl_duration, na.rm = TRUE),
mean_employed = mean(employed_after_12_months, na.rm = TRUE),
sd_employed = sd(employed_after_12_months, na.rm = TRUE)
)
descriptive_stats
mutate(treat_group = max(treat_group, na.rm = TRUE)
data <- data %>%
# Lab Final Assignment – Causal Inference for Policy Evaluation
# Spring Semester 2025
# Due: 15.07.2025, 23:59
# Authors: Marco Gortan, Felix Schulz, Benjamin Weggelaar
# --------------------------------------------------------------
# Setup
# --------------------------------------------------------------
Sys.setlocale("LC_TIME", "C")
packages.vector <- c("dplyr", "stargazer", "sandwich", "lmtest", "AER", "broom", "broom.mixed",
"jtools", "texreg", "kableExtra", "rstudioapi", "lubridate")
# Load necessary libraries
lapply(packages.vector, require, character.only = TRUE)
# Load the data
rm(list = ls())
# rstudioapi::getActiveDocumentContext()$path %>% dirname() %>% dirname() %>% setwd()
data = read.csv("code/data_did_panel_swiss.csv")
# General reference for the column names. Note:
# - We have character values for marits, educ, mother_tongue, while the description has factors
# - "Specialized" and "University" are supposed to be comined in "educ" variable, but in our data they are different
var_labels <- c(
id              = "Personal identifier (the same individual can have multiple spells)",
date_start      = "Date of start of unemployment spell",
date_end        = "Date of end of unemployment spell",
sex             = "Sex — 0 male, 1 female",
age             = "Age at the beginning of the unemployment spell",
marits          = "Marital status — 0 not married, 1 married",
canton          = "Canton of residence — 26 cantons",
region          = "Region of residence — 7 great regions (Swiss FSO definition)",
nationality     = "Nationality — 1 Swiss, 2 EU/EFTA, 3 Other",
mother_tongue   = "Mother tongue — 0 German, 1 French, 2 Italian, 3 English, 4 other",
educ            = "Education — 0 school, 1 apprenticeship or matura, 2 specialized or university",
insured_earn    = "Earnings insured by unemployment insurance",
lastj_occpt     = "Occupation of the last pre‐unemployment job (23 categories)",
lastj_fct       = "Function in the last pre‐unemployment job — 0 self‐employed, 1 managerial, 2 specialist, 3 learning/other",
lastj_rate      = "Activity rate (% of full‐time) in the last pre‐unemployment job",
child_subsidies = "1 receives subsidies for dependent children, 0 otherwise",
contr_2y        = "Months of contribution (employment) in the 2 years prior to unemployment",
unempl_r        = "Unemployment rate (in %) at canton level",
gdp_gr          = "GDP growth (in %) at canton level",
treat           = "Month in unemployment spell when treatment started (0 when not treated)"
)
# ----------
# Question 2
# ----------
# Generate the two outcome variables of interest and provide descriptive statistics for all four
# relevant groups (treated pre/post, controls pre/post). Discuss the results. [4 points]
# ----------
# Convert date_start and date_end to Date format
data$date_start <- as.Date(data$date_start, format = "%d%b%Y")
data$date_end <- as.Date(data$date_end, format = "%d%b%Y")
# treatment groups
data$treat_group <- ifelse(data$treat > 0, 1, 0)
data <- data %>%
group_by(id) %>%
mutate(treat_group = max(treat_group, na.rm = TRUE)) %>%
ungroup()
# treatment groups
data$treat_group <- ifelse(data$treat > 0, 1, 0)
# Remove individuals with 'NA' in 'treat' column
data <- data %>% filter(!is.na(treat))
# treatment groups
data$treat_group <- ifelse(data$treat > 0, 1, 0)
data <- data %>%
group_by(id) %>%
mutate(treat_group = max(treat_group, na.rm = TRUE)) %>%
ungroup()
data
data$treat_group <- ifelse(data$treat_group == 1 & data$treat > 0, 1, 0)
datata$post        <- ifelse(year(data$date_start) >= 2013, 1, 0)
data$post        <- ifelse(year(data$date_start) >= 2013, 1, 0)
# 1. unemployment duration
data$unempl_duration <- as.numeric(data$date_end - data$date_start, format = "%d%b%Y")
# 2. probability of being employed after 12 months --> for now, we interpret as just dummy of employed vs non-employed
data$employed_after_12_months <- ifelse(data$unempl_duration < 365, 1, 0)
# Descriptive statistics for the four groups
descriptive_stats <- data %>%
group_by(treat_group, post) %>%
summarise(
mean_duration = mean(unempl_duration, na.rm = TRUE),
sd_duration = sd(unempl_duration, na.rm = TRUE),
mean_employed = mean(employed_after_12_months, na.rm = TRUE),
sd_employed = sd(employed_after_12_months, na.rm = TRUE)
)
descriptive_stats
data <- data %>%
group_by(id) %>%
mutate(treat_group = max(treat_group, na.rm = TRUE)) %>%
ungroup()
# Lab Final Assignment – Causal Inference for Policy Evaluation
# Spring Semester 2025
# Due: 15.07.2025, 23:59
# Authors: Marco Gortan, Felix Schulz, Benjamin Weggelaar
# --------------------------------------------------------------
# Setup
# --------------------------------------------------------------
Sys.setlocale("LC_TIME", "C")
packages.vector <- c("dplyr", "stargazer", "sandwich", "lmtest", "AER", "broom", "broom.mixed",
"jtools", "texreg", "kableExtra", "rstudioapi", "lubridate")
# Load necessary libraries
lapply(packages.vector, require, character.only = TRUE)
# Load the data
rm(list = ls())
# rstudioapi::getActiveDocumentContext()$path %>% dirname() %>% dirname() %>% setwd()
data = read.csv("code/data_did_panel_swiss.csv")
# General reference for the column names. Note:
# - We have character values for marits, educ, mother_tongue, while the description has factors
# - "Specialized" and "University" are supposed to be comined in "educ" variable, but in our data they are different
var_labels <- c(
id              = "Personal identifier (the same individual can have multiple spells)",
date_start      = "Date of start of unemployment spell",
date_end        = "Date of end of unemployment spell",
sex             = "Sex — 0 male, 1 female",
age             = "Age at the beginning of the unemployment spell",
marits          = "Marital status — 0 not married, 1 married",
canton          = "Canton of residence — 26 cantons",
region          = "Region of residence — 7 great regions (Swiss FSO definition)",
nationality     = "Nationality — 1 Swiss, 2 EU/EFTA, 3 Other",
mother_tongue   = "Mother tongue — 0 German, 1 French, 2 Italian, 3 English, 4 other",
educ            = "Education — 0 school, 1 apprenticeship or matura, 2 specialized or university",
insured_earn    = "Earnings insured by unemployment insurance",
lastj_occpt     = "Occupation of the last pre‐unemployment job (23 categories)",
lastj_fct       = "Function in the last pre‐unemployment job — 0 self‐employed, 1 managerial, 2 specialist, 3 learning/other",
lastj_rate      = "Activity rate (% of full‐time) in the last pre‐unemployment job",
child_subsidies = "1 receives subsidies for dependent children, 0 otherwise",
contr_2y        = "Months of contribution (employment) in the 2 years prior to unemployment",
unempl_r        = "Unemployment rate (in %) at canton level",
gdp_gr          = "GDP growth (in %) at canton level",
treat           = "Month in unemployment spell when treatment started (0 when not treated)"
)
# ----------
# Question 2
# ----------
# Generate the two outcome variables of interest and provide descriptive statistics for all four
# relevant groups (treated pre/post, controls pre/post). Discuss the results. [4 points]
# ----------
# Convert date_start and date_end to Date format
data$date_start <- as.Date(data$date_start, format = "%d%b%Y")
data$date_end <- as.Date(data$date_end, format = "%d%b%Y")
# Remove individuals with 'NA' in 'treat' column
data <- data %>% filter(!is.na(treat))
# treatment groups
data$treat_group <- ifelse(data$treat > 0, 1, 0)
data <- data %>%
group_by(id) %>%
mutate(treat_group = max(treat_group, na.rm = TRUE)) %>%
ungroup()
data$treat_group <- ifelse(data$treat_group == 1 & data$treat > 0, 1, 0)
data$post        <- ifelse(year(data$date_start) >= 2013, 1, 0)
# Lab Final Assignment – Causal Inference for Policy Evaluation
# Spring Semester 2025
# Due: 15.07.2025, 23:59
# Authors: Marco Gortan, Felix Schulz, Benjamin Weggelaar
# --------------------------------------------------------------
# Setup
# --------------------------------------------------------------
Sys.setlocale("LC_TIME", "C")
packages.vector <- c("dplyr", "stargazer", "sandwich", "lmtest", "AER", "broom", "broom.mixed",
"jtools", "texreg", "kableExtra", "rstudioapi", "lubridate")
# Load necessary libraries
lapply(packages.vector, require, character.only = TRUE)
# Load the data
rm(list = ls())
# rstudioapi::getActiveDocumentContext()$path %>% dirname() %>% dirname() %>% setwd()
data = read.csv("code/data_did_panel_swiss.csv")
# General reference for the column names. Note:
# - We have character values for marits, educ, mother_tongue, while the description has factors
# - "Specialized" and "University" are supposed to be comined in "educ" variable, but in our data they are different
var_labels <- c(
id              = "Personal identifier (the same individual can have multiple spells)",
date_start      = "Date of start of unemployment spell",
date_end        = "Date of end of unemployment spell",
sex             = "Sex — 0 male, 1 female",
age             = "Age at the beginning of the unemployment spell",
marits          = "Marital status — 0 not married, 1 married",
canton          = "Canton of residence — 26 cantons",
region          = "Region of residence — 7 great regions (Swiss FSO definition)",
nationality     = "Nationality — 1 Swiss, 2 EU/EFTA, 3 Other",
mother_tongue   = "Mother tongue — 0 German, 1 French, 2 Italian, 3 English, 4 other",
educ            = "Education — 0 school, 1 apprenticeship or matura, 2 specialized or university",
insured_earn    = "Earnings insured by unemployment insurance",
lastj_occpt     = "Occupation of the last pre‐unemployment job (23 categories)",
lastj_fct       = "Function in the last pre‐unemployment job — 0 self‐employed, 1 managerial, 2 specialist, 3 learning/other",
lastj_rate      = "Activity rate (% of full‐time) in the last pre‐unemployment job",
child_subsidies = "1 receives subsidies for dependent children, 0 otherwise",
contr_2y        = "Months of contribution (employment) in the 2 years prior to unemployment",
unempl_r        = "Unemployment rate (in %) at canton level",
gdp_gr          = "GDP growth (in %) at canton level",
treat           = "Month in unemployment spell when treatment started (0 when not treated)"
)
# ----------
# Question 2
# ----------
# Generate the two outcome variables of interest and provide descriptive statistics for all four
# relevant groups (treated pre/post, controls pre/post). Discuss the results. [4 points]
# ----------
# Convert date_start and date_end to Date format
data$date_start <- as.Date(data$date_start, format = "%d%b%Y")
data$date_end <- as.Date(data$date_end, format = "%d%b%Y")
# Remove individuals with 'NA' in 'treat' column
data <- data %>% filter(!is.na(treat))
# treatment groups
data$treat_group <- ifelse(data$treat > 0, 1, 0)
data <- data %>%
group_by(id) %>%
mutate(treat_group = max(treat_group, na.rm = TRUE)) %>%
ungroup()
data$post        <- ifelse(year(data$date_start) >= 2013, 1, 0)
# 1. unemployment duration
data$unempl_duration <- as.numeric(data$date_end - data$date_start, format = "%d%b%Y")
# 2. probability of being employed after 12 months --> for now, we interpret as just dummy of employed vs non-employed
data$employed_after_12_months <- ifelse(data$unempl_duration < 365, 1, 0)
# Descriptive statistics for the four groups
descriptive_stats <- data %>%
group_by(treat_group, post) %>%
summarise(
mean_duration = mean(unempl_duration, na.rm = TRUE),
sd_duration = sd(unempl_duration, na.rm = TRUE),
mean_employed = mean(employed_after_12_months, na.rm = TRUE),
sd_employed = sd(employed_after_12_months, na.rm = TRUE)
)
descriptive_stats
# Descriptive statistics for the four groups
descriptive_stats <- data %>%
group_by(treat_group, post) %>%
summarise(
mean_duration = mean(unempl_duration, na.rm = TRUE),
mean_employed = mean(employed_after_12_months, na.rm = TRUE),
n = n(),
mean_age      = mean(age, na.rm = T),
.groups = 'drop'
)
descriptive_stats
data$sex
# Codify sex variable
data$sex01 <- ifelse(data$sex == "Female", 1,
ifelse(data$sex == "Male", 0, NA))
# Codify sex variable
data$sex <- ifelse(data$sex == "Female", 1,
ifelse(data$sex == "Male", 0, NA))
# Descriptive statistics for the four groups
descriptive_stats <- data %>%
group_by(treat_group, post) %>%
summarise(
mean_duration = mean(unempl_duration, na.rm = TRUE),
mean_employed = mean(employed_after_12_months, na.rm = TRUE),
n = n(),
mean_age      = mean(age, na.rm = T),
mean_sex      = mean(sex, na.rm = TRUE),
.groups = 'drop'
)
descriptive_stats
data$marits
data$marits <- ifelse(data$marits == "Married", 1,
ifelse(data$marits == "Unmarried", 0, NA))
# Descriptive statistics for the four groups
descriptive_stats <- data %>%
group_by(treat_group, post) %>%
summarise(
mean_duration = mean(unempl_duration, na.rm = TRUE),
mean_employed = mean(employed_after_12_months, na.rm = TRUE),
n = n(),
mean_age      = mean(age, na.rm = T),
mean_sex      = mean(sex, na.rm = TRUE),
mean_marits   = mean(marits, na.rm = TRUE),
.groups = 'drop'
)
descriptive_stats
# Descriptive statistics for the four groups
descriptive_stats <- data %>%
group_by(treat_group, post) %>%
summarise(
mean_duration = mean(unempl_duration, na.rm = TRUE),
mean_employed = mean(employed_after_12_months, na.rm = TRUE),
n = n(),
mean_age      = mean(age, na.rm = T),
mean_sex      = mean(sex, na.rm = TRUE),
mean_marits   = mean(marits, na.rm = TRUE),
mean_earn     = mean(insured_earn, na.rm = TRUE),
mean_rate     = mean(lastj_rate, na.rm = TRUE),
.groups = 'drop'
)
descriptive_stats
# Descriptive statistics for the four groups
descriptive_stats <- data %>%
group_by(treat_group, post) %>%
summarise(
mean_duration = mean(unempl_duration, na.rm = TRUE),
mean_employed = mean(employed_after_12_months, na.rm = TRUE),
n = n(),
mean_age      = mean(age, na.rm = T),
mean_sex      = mean(sex, na.rm = TRUE),
mean_marits   = mean(marits, na.rm = TRUE),
mean_earn     = mean(insured_earn, na.rm = TRUE),
mean_rate     = mean(lastj_rate, na.rm = TRUE),
mean_childs   = mean(child_subsidies, na.rm = TRUE),
mean_contr_2y = mean(contr_2y, na.rm = TRUE),
.groups = 'drop'
)
descriptive_stats
