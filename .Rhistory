aes(x = month, y = mean_employed_program),
color = "#d95f02",
linetype = "dashed",
size = 1
) +
scale_y_continuous(
labels = percent_format(accuracy = 1),
expand = expansion(mult = c(0, .05))
) +
scale_x_continuous(
breaks = seq(min(data_long_means$month), max(data_long_means$month), by = 1)
) +
scale_color_manual(
values = c("Control" = "#1b9e77", "Treated" = "#d95f02")
) +
labs(
title = "Employment Rate since beginning of unemployment",
x     = "Month",
y     = "Employment rate (%)",
color = "Group"
) +
theme_minimal(base_size = 14) +
theme(
legend.position   = "top",
panel.grid.minor  = element_blank()
)
# Print it
print(p1)
# ————————————————————————————————————————————
# Mean unemployment duration over time
# ————————————————————————————————————————————
p2 <- ggplot(data_long_means, aes(x = month, y = mean_unempl_duration, color = Group)) +
geom_line(size = 1) +
geom_point(size = 2) +
scale_y_continuous(
expand = expansion(mult = c(0, .05))
) +
# ==== new layer: treated-only line ====
geom_line(
data = filter(data_long_means, treat_group == 1),
aes(x = month, y = mean_unempl_duration_program),
color = "#d95f02",
linetype = "dashed",
size = 1
) +
scale_x_continuous(breaks = seq(min(data_long_means$month), max(data_long_means$month), by = 1)) +
scale_color_manual(
values = c("Control" = "#1b9e77", "Treated" = "#d95f02")
) +
labs(
title = "Unemployment Duration",
x     = "Month",
y     = "Mean Unemployment Duration (days)",
color = "Group"
) +
theme_minimal(base_size = 14) +
theme(
legend.position   = "top",
panel.grid.minor  = element_blank()
)
print(p2)
# Save the plots
ggsave("output/figures/final_employment_rate_over_time.jpg", plot = p1, width = 6.5, height = 5)
ggsave("output/figures/final_unemployment_duration_over_time.jpg", plot = p2, width = 6.5, height = 5)
# ----------
# Question 6
# ----------
# Discuss the validity of the identifying assumptions in this specific case. Provide and discuss
# supporting evidence if possible, incl. event study estimates. [8 points]
# Common support
#----------
# Hist plot of age by the two groups in post == 1
data <- data %>%
mutate(
Group = factor(treat_group,
levels = c(0,1),
labels = c("Control","Treated"))
)
hist_age = ggplot(data %>% filter(post == 1), aes(x = age, fill = Group)) +
geom_histogram(
position = "identity",  # overlay
alpha    = 0.4,         # see through
bins     = 30           # or choose binwidth = 1
) +
scale_fill_brewer(palette = "Set1") +
labs(
title = "Age Distribution by Group",
x     = "Age (years)",
y     = "Count"
) +
theme_minimal()
ggsave("output/figures/final_histogram_age.jpg", plot = hist_age, width = 8.5, height = 5)
# ----------
plot_employed12m
hist_age
# ----------
# Question 7
# ----------
# Implement the DiD using OLS. Describe in detail what you do and why. Discuss whether or
# not you need additional control variables and if so, why. Discuss the results. [8 points]
# ----------
# OLS DiD regression
reg_did_parametric_1 = lm(unempl_duration ~ treat_group*post)
# ----------
# Question 7
# ----------
# Implement the DiD using OLS. Describe in detail what you do and why. Discuss whether or
# not you need additional control variables and if so, why. Discuss the results. [8 points]
# ----------
# OLS DiD regression
reg_did_parametric_1 = lm(unempl_duration ~ treat_group*post, data = data)
summary(data)
summary(reg_did_parametric_1)
names(data)
names(data)[1:20]
names(data)[1:21]
reg_did_parametric_outcome1_2 = lm(unempl_duration ~ treat_group*post + age + sex + marits + nationality, data = data)
reg_did_parametric_outcome1_2 = lm(unempl_duration ~ treat_group*post + age + sex + marits + nationality, data = data)
reg_did_parametric_outcome1_2
# ----------
# Question 7
# ----------
# Implement the DiD using OLS. Describe in detail what you do and why. Discuss whether or
# not you need additional control variables and if so, why. Discuss the results. [8 points]
# ----------
# OLS DiD regression
reg_did_parametric_outcome1_1 = lm(unempl_duration ~ treat_group*post, data = data)
reg_did_parametric_outcome1_2 = lm(unempl_duration ~ treat_group*post + age + sex , data = data)
reg_did_parametric_outcome1_2
summary(reg_did_parametric_outcome1_2)
reg_did_parametric_outcome1_2 = lm(unempl_duration ~ treat_group*post + age + sex + marits + factor(nationality), data = data)
table(data$nationality)
reg_did_parametric_outcome1_2 = lm(unempl_duration ~ treat_group*post + age + sex + marits + mother_tongue, data = data)
summary(reg_did_parametric_outcome1_)
summary(reg_did_parametric_outcome1_2)
reg_did_parametric_outcome1_2 = lm(unempl_duration ~ treat_group*post + age + sex + marits + mother_tongue + child_subsidies + contr_2y, data = data)
reg_did_parametric_outcome1_3 = lm(unempl_duration ~ treat_group*post + age + sex + marits + mother_tongue + child_subsidies + contr_2y, data = data)
summary(reg_did_parametric_outcome1_3)
reg_did_parametric_outcome2_1 = lm(employed_after_12_months ~ treat_group*post, data = data)
reg_did_parametric_outcome2_2 = lm(employed_after_12_months ~ treat_group*post + age + sex + marits + mother_tongue, data = data)
reg_did_parametric_outcome2_3 = lm(employed_after_12_months ~ treat_group*post + age + sex + marits + mother_tongue + child_subsidies + contr_2y, data = data)
summary(reg_did_parametric_outcome2)
summary(reg_did_parametric_outcome2_1)
summary(reg_did_parametric_outcome2_3)
table(data$mother_tongue)
reg_did_parametric_outcome2_3 = lm(employed_after_12_months ~ treat_group*post + age + sex + marits + mother_tongue + child_subsidies + contr_2y + lastj_rate, data = data)
summary(reg_did_parametric_outcome2_3)
reg_did_parametric_outcome2_3 = lm(employed_after_12_months ~ treat_group*post + age + sex + marits + mother_tongue + child_subsidies + contr_2y + treat, data = data)
summary(reg_did_parametric_outcome2_3)
reg_did_parametric_outcome2_3 = lm(employed_after_12_months ~ treat_group*post + age + sex + marits + mother_tongue + child_subsidies + contr_2y, data = data)
summary(reg_did_parametric_outcome2_3)
reg_did_parametric_outcome1_1)[1]
coef(reg_did_parametric_outcome1_1)[1]
coef(reg_did_parametric_outcome1_1)[2]
summary(reg_did_parametric_outcome1_3)
reg_did_parametric_outcome1_1
summary(reg_did_parametric_outcome1_3)
# Visualization
data_reg_o1 = data.frame(
period      = c(2011,2011, 2015,2015),
treat_group = c(0,1,0,1),
spec1       = c(
coef(reg_did_parametric_outcome1_1)[1],
coef(reg_did_parametric_outcome1_1)[1] + coef(reg_did_parametric_outcome1_1)[2],
coef(reg_did_parametric_outcome1_1)[1] + coef(reg_did_parametric_outcome1_1)[3],
coef(reg_did_parametric_outcome1_1)[1] + coef(reg_did_parametric_outcome1_1)[2] + coef(reg_did_parametric_outcome1_1)[3] + coef(reg_did_parametric_outcome1_1)[4],
))
# Visualization
data_reg_o1 = data.frame(
period      = c(2011,2011, 2015,2015),
treat_group = c(0,1,0,1),
spec1       = c(
coef(reg_did_parametric_outcome1_1)[1],
coef(reg_did_parametric_outcome1_1)[1] + coef(reg_did_parametric_outcome1_1)[2],
coef(reg_did_parametric_outcome1_1)[1] + coef(reg_did_parametric_outcome1_1)[3],
coef(reg_did_parametric_outcome1_1)[1] + coef(reg_did_parametric_outcome1_1)[2] + coef(reg_did_parametric_outcome1_1)[3] + coef(reg_did_parametric_outcome1_1)[4]
))
data_reg_o1
ggplot(data_reg_o1, aes(x = period, y = spec1, color = factor(treat_group))
ggplot(data_reg_o1, aes(x = period, y = spec1, color = factor(treat_group))) +
ggplot(data_reg_o1, aes(x = period, y = spec1, color = factor(treat_group))) +
geom_point(size = 3) +
geom_line(size = 1) +
scale_color_manual(values = c("Control" = "#1b9e77", "Treated" = "#d95f02")) +
labs(
title = "OLS DiD Regression Results for Unemployment Duration",
x     = "Year",
y     = "Estimated Unemployment Duration (days)",
color = "Group"
) +
theme_minimal(base_size = 14) +
theme(
legend.position   = "top",
panel.grid.minor  = element_blank()
)
ggplot(data_reg_o1, aes(x = period, y = spec1, color = factor(treat_group))) +
geom_point(size = 3) +
geom_line(size = 1) +
scale_color_manual(values = c("0" = "#1b9e77", "1" = "#d95f02")) +
labs(
title = "OLS DiD Regression Results for Unemployment Duration",
x     = "Year",
y     = "Estimated Unemployment Duration (days)",
color = "Group"
) +
theme_minimal(base_size = 14) +
theme(
legend.position   = "top",
panel.grid.minor  = element_blank()
)
ggplot(data_reg_o1, aes(x = period, y = spec1, color = factor(treat_group))) +
geom_point(size = 3) +
geom_line(size = 1) +
scale_color_manual(values = c("0" = "#1b9e77", "1" = "#d95f02")) +
labs(
title = "OLS DiD Regression for Unemployment Duration",
x     = "Year",
y     = "Estimated Unemployment Duration (days)",
color = "Group"
) +
theme_minimal(base_size = 14) +
theme(
legend.position   = "top",
panel.grid.minor  = element_blank()
)
# Visualization
data_reg_o1 = data.frame(
period      = c(2011,2011, 2015,2015),
treat_group = c(0,1,0,1),
spec1       = c(
coef(reg_did_parametric_outcome1_1)[1],
coef(reg_did_parametric_outcome1_1)[1] + coef(reg_did_parametric_outcome1_1)[2],
coef(reg_did_parametric_outcome1_1)[1] + coef(reg_did_parametric_outcome1_1)[3],
coef(reg_did_parametric_outcome1_1)[1] + coef(reg_did_parametric_outcome1_1)[2] + coef(reg_did_parametric_outcome1_1)[3] + coef(reg_did_parametric_outcome1_1)[4]
),
spec2       = c(
coef(reg_did_parametric_outcome2_1)[1],
coef(reg_did_parametric_outcome2_1)[1] + coef(reg_did_parametric_outcome2_1)[2],
coef(reg_did_parametric_outcome2_1)[1] + coef(reg_did_parametric_outcome2_1)[3],
coef(reg_did_parametric_outcome2_1)[1] + coef(reg_did_parametric_outcome2_1)[2] + coef(reg_did_parametric_outcome2_1)[3] + coef(reg_did_parametric_outcome2_1)[4]
))
# Visualization
data_reg = data.frame(
period      = c(2011,2011, 2015,2015),
treat_group = c(0,1,0,1),
spec1       = c(
coef(reg_did_parametric_outcome1_1)[1],
coef(reg_did_parametric_outcome1_1)[1] + coef(reg_did_parametric_outcome1_1)[2],
coef(reg_did_parametric_outcome1_1)[1] + coef(reg_did_parametric_outcome1_1)[3],
coef(reg_did_parametric_outcome1_1)[1] + coef(reg_did_parametric_outcome1_1)[2] + coef(reg_did_parametric_outcome1_1)[3] + coef(reg_did_parametric_outcome1_1)[4]
),
spec2       = c(
coef(reg_did_parametric_outcome2_1)[1],
coef(reg_did_parametric_outcome2_1)[1] + coef(reg_did_parametric_outcome2_1)[2],
coef(reg_did_parametric_outcome2_1)[1] + coef(reg_did_parametric_outcome2_1)[3],
coef(reg_did_parametric_outcome2_1)[1] + coef(reg_did_parametric_outcome2_1)[2] + coef(reg_did_parametric_outcome2_1)[3] + coef(reg_did_parametric_outcome2_1)[4]
))
ggplot(data_reg, aes(x = period, y = spec1, color = factor(treat_group))) +
geom_point(size = 3) +
geom_line(size = 1) +
scale_color_manual(values = c("0" = "#1b9e77", "1" = "#d95f02")) +
labs(
title = "OLS DiD Regression for Unemployment Duration",
x     = "Year",
y     = "Estimated Unemployment Duration (days)",
color = "Group"
) +
theme_minimal(base_size = 14) +
theme(
legend.position   = "top",
panel.grid.minor  = element_blank()
)
ggplot(data_reg, aes(x = period, y = spec2, color = factor(treat_group))) +
geom_point(size = 3) +
geom_line(size = 1) +
scale_color_manual(values = c("0" = "#1b9e77", "1" = "#d95f02")) +
labs(
title = "OLS DiD Regression for Unemployment Duration",
x     = "Year",
y     = "Estimated Unemployment Duration (days)",
color = "Group"
) +
theme_minimal(base_size = 14) +
theme(
legend.position   = "top",
panel.grid.minor  = element_blank()
)
ggplot(data_reg, aes(x = period, y = spec2, color = factor(treat_group))) +
geom_point(size = 3) +
geom_line(size = 1) +
scale_color_manual(values = c("0" = "#1b9e77", "1" = "#d95f02")) +
labs(
title = "OLS DiD Regression for Empl. after 1Y",
x     = "Year",
y     = "Prob. being employed after 1 year (%)",
color = "Group"
) +
theme_minimal(base_size = 14) +
theme(
legend.position   = "top",
panel.grid.minor  = element_blank()
)
# ----------
# Question 8
# ----------
# Implement the DiD using a semi-parametric estimator based on the propensity score. Describe
# in detail what you do and why. Discuss the results and compare them to the OLS estimates. [10 points]
# ----------
# 1. Estimate a global propensity score for being in the treatment group
ps.model <- glm(
treat_group ~ age + sex + marits + mother_tongue,
data    = data,
family  = binomial(link = "logit")
)
ps.model
data$pscore <- predict(ps.model, type = "response")
data$pscore
# 2. Trim to the region of common support
ps_min <- max(
min(data$pscore[data$treat_group == 1]),
min(data$pscore[data$treat_group == 0])
)
ps_min
a
ps_max <- min(
max(data$pscore[data$treat_group == 1]),
max(data$pscore[data$treat_group == 0])
)
ps_max
data_trim <- subset(data, pscore >= ps_min & pscore <= ps_max)
# ----------
# Question 8
# ----------
# Implement the DiD using a semi-parametric estimator based on the propensity score. Describe
# in detail what you do and why. Discuss the results and compare them to the OLS estimates. [10 points]
# ----------
# 1. Estimate a global propensity score for being in the treatment group
ps.model <- glm(
treat_group ~ sex + marits + mother_tongue,
data    = data,
family  = binomial(link = "logit")
)
data$pscore <- predict(ps.model, type = "response")
# 2. Trim to the region of common support
ps_min <- max(
min(data$pscore[data$treat_group == 1]),
min(data$pscore[data$treat_group == 0])
)
ps_min
ps_max <- min(
max(data$pscore[data$treat_group == 1]),
max(data$pscore[data$treat_group == 0])
)
ps_max
data_trim <- subset(data, pscore >= ps_min & pscore <= ps_max)
# 3. Construct inverse‐probability weights
data_trim$ipw <- with(
data_trim,
ifelse(treat_group == 1, 1/pscore, 1/(1 - pscore))
)
data_trim$ipw
# 4. Run the weighted DID regression
did_ipw <- lm(
unempl_duration ~ treat_group * post,
data    = data_trim,
weights = ipw
)
did_ipw
summary(did_ipw)
?treatweight
??treatweight
packages.vector <- c("dplyr", "stargazer", "sandwich", "lmtest", "AER", "broom", "broom.mixed",
"jtools", "texreg", "kableExtra", "rstudioapi", "lubridate", "ggplot2",
"knitr", "kableExtra", "scales", "tidyr", "causalweight")
# Load necessary libraries
lapply(packages.vector, require, character.only = TRUE)
install.packages("causalweight")
# Load necessary libraries
lapply(packages.vector, require, character.only = TRUE)
data_trim[,c("sex", "marits", "mother_tongue")]
data_trim[c("sex", "marits", "mother_tongue")]
# Alternatively, with causalweight package
treatweight(
y = data_trim$unempl_duration,
d = data_trim$treat_group,
x = data_trim[,c("sex", "marits", "mother_tongue")],
logit = T
)
data_trim[,c("sex", "marits", "mother_tongue")]
data_trim$treat_group
data_trim$unempl_duration
# Alternatively, with causalweight package
treatweight(
y = data_trim$unempl_duration,
d = data_trim$treat_group,
x = data_trim[,c("sex", "marits", "mother_tongue")],
logit = T
)
# Alternatively, with causalweight package
treatweight(
y = data_trim$unempl_duration,
d = data_trim$treat_group,
x = data_trim[,c("sex")],
logit = T
)
# Alternatively, with causalweight package
treatweight(
y = data_trim$unempl_duration,
d = data_trim$treat_group,
x = data_trim[c("sex", "marits", "mother_tongue")],
logit = T
)
# Alternatively, with causalweight package
treatweight(
y = data_trim$unempl_duration,
d = data_trim$treat_group,
x = data_trim[c("sex")],
logit = T
)
# Alternatively, with causalweight package
treatweight(
y = data_trim$unempl_duration,
d = data_trim$treat_group,
x = data_trim[c("sex")],
boot = 10,
logit = T
)
data_trim_nona = data_trim %>%
filter(!is.na(unempl_duration) & !is.na(treat_group)  & !is.na(sex))
View(data_trim)
# Alternatively, with causalweight package
treatweight(
y = data_trim_nona$unempl_duration,
d = data_trim_nona$treat_group,
x = data_trim_nona[c("sex")],
boot = 10,
logit = T
)
library(tidyverse)
library(lubridate)
library(lfe)
library(sandwich)
data <- read_csv("code/data_did_panel_swiss.csv")
data <- read_csv("data_did_panel_swiss.csv")
data <- data %>%
mutate(
across(c(date_start, date_end), ~ dmy(.x))
)
data[["time"]] <- data$date_start
day(data$time) <- 1
# turn into integer period
data[["period"]] <- round((dmy("01012011") %--% data$time) / dmonths(1))
event_period <- round((dmy("01012011") %--% dmy("01012013")) / dmonths(1))
# create event time
data[["event_time"]] <- data$period - event_period
data %>% select(treat) %>% summary()
data <- data %>%
mutate(
eligible = (age >= 45) * 1,
post = (date_start >= dmy("01012013")) * 1,
)
data <- data %>%
mutate(
unempl_dur = (date_start %--% date_end) / ddays(1),
employed_12m = (((date_start %--% date_end) / dyears(1)) < 1) * 1
)
data %>%
group_by(eligible, post) %>%
summarise(
across(c(unempl_dur, employed_12m), \(x) mean(x, na.rm = TRUE))
)
data %>% select(date_start) %>% summary()
# do we plot start dates on the x-axis?
plot_data <- plot_data %>%
group_by(
date_start,
eligible = as.logical(eligible)
) %>%
summarise(
across(c(unempl_dur, employed_12m), \(x) mean(x, na.rm = TRUE))
) %>%
ungroup() %>%
arrange(eligible, date_start) %>%
# elongate outcomes
pivot_longer(
cols = c(unempl_dur, employed_12m),
names_to = "outcome",
values_to = "value"
)
# do we plot start dates on the x-axis?
plot_data <- data %>%
group_by(
date_start,
eligible = as.logical(eligible)
) %>%
summarise(
across(c(unempl_dur, employed_12m), \(x) mean(x, na.rm = TRUE))
) %>%
ungroup() %>%
arrange(eligible, date_start) %>%
# elongate outcomes
pivot_longer(
cols = c(unempl_dur, employed_12m),
names_to = "outcome",
values_to = "value"
)
ggplot(plot_data) +
geom_point(aes(x = date_start, y = value, color = eligible)) +
#scale_color_manual(values = c(0, 1), labels = c("Not eligible" = "red", "Eligible" = "blue")) +
facet_wrap(~ outcome, scales = "free_y") +
theme_bw()
````
